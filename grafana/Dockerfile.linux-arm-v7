FROM alpine:3.7 AS grafana_bin_downloader
LABEL MAINTAINER="Samuele Maci <macisamuele@gmail.com>"
LABEL DESCRIPTION="[Monitoring Tools - bin downloader] grafana"
LABEL PLATFORM="armhf"

# Add qemu-*-static to allow execution of the build process from any platform
COPY qemu-*-static /usr/bin/

ENV DEBIAN_VERSION=stretch \
    GRAFANA_VERSION=5.0.4

RUN set -eux && \
    apk update && \
    apk add --virtual .build-deps curl && \
    tar_gz_url=https://github.com/fg2it/grafana-on-raspberry/releases/download/v${GRAFANA_VERSION}/grafana-${GRAFANA_VERSION}.linux-armhf.tar.gz; \
    # sha256 of the tar file for checksum verification (Found no way to automatically fetch this)
    tar_gz_sha256=f03f0b8144785cbacaff18654a73bf9bc79762bde6ce8888c30671c38e3e4ada; \
    curl --location ${tar_gz_url} > /tmp/grafana-${GRAFANA_VERSION}.tar.gz && \
    echo "${tar_gz_sha256}  /tmp/grafana-${GRAFANA_VERSION}.tar.gz" | sha256sum -c && \
    tar xvf /tmp/grafana-${GRAFANA_VERSION}.tar.gz -C /tmp/ && \
    mkdir -p /grafana && \
    for dir in bin conf public; do \
        mv /tmp/grafana-${GRAFANA_VERSION}/${dir} /grafana/${dir}; \
    done && \
    rm -rf /tmp/grafana-${GRAFANA_VERSION} /tmp/grafana-${GRAFANA_VERSION}.tar.gz

FROM arm32v7/debian:stretch-slim AS grafana
LABEL MAINTAINER="Samuele Maci <macisamuele@gmail.com>"
LABEL DESCRIPTION="[Monitoring Tools] grafana"
LABEL PLATFORM="armhf"

# Add qemu-*-static to allow execution of the build process from any platform
COPY qemu-*-static /usr/bin/

# Create container user
ENV RUN_USER grafanad
RUN adduser \
    --home /non_existing \
    --gecos "${RUN_USER} user" \
    --shell '/bin/bash' \
    --disabled-login \
    --disabled-password \
    ${RUN_USER}

# Create volume directory such that ${RUN_USER} will be able to read/write from/on it
RUN set -x && \
    install --owner ${RUN_USER} --group ${RUN_USER} -d /grafana/data && \
    install --owner ${RUN_USER} --group ${RUN_USER} -d /grafana/conf && \
    install --owner ${RUN_USER} --group ${RUN_USER} -d /grafana/logs && \
    install --owner ${RUN_USER} --group ${RUN_USER} -d /grafana/plugins && \
    install --owner ${RUN_USER} --group ${RUN_USER} -d /grafana/provisioning

# Copy initial configurations
# NOTE: if the configurations are not ideal for your use case
#       you can override them by attaching the related volume
COPY config /grafana/

# Install grafana dependencies
ENV LIBFONTCONFIG_VERSION=2.11.0-6.7+b1
RUN apt-get update && \
    DEBIAN_FRONTEND=noninteractive apt-get install --yes --no-install-recommends \
        libfontconfig1=${LIBFONTCONFIG_VERSION} && \
    rm -rf /var/lib/apt/lists/*

# Copy grafana binaries
COPY --from=grafana_bin_downloader /grafana/bin /grafana/bin
COPY --from=grafana_bin_downloader /grafana/public /grafana/public

# Container port, privileges and volumes
EXPOSE 3000
USER ${RUN_USER}
VOLUME [ \
    "/grafana/data", \
    "/grafana/conf", \
    "/grafana/logs", \
    "/grafana/plugins", \
    "/grafana/provisioning", \
    "/etc/grafana" \
]

# Default command
CMD [ \
    "/grafana/bin/grafana-server", \
        "-homepath", \
        "/grafana/" \
]
